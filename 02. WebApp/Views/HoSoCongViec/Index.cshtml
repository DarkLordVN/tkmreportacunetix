@using PagedList.Mvc;
@model TKM.BLL.HoSoCongViecListView
@{
    ViewBag.Title = "Danh sách công việc";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var typeUser = (string)ViewBag.typeUser;
    var capBac = (string)ViewBag.capBac;
    var isDonVi = (bool)ViewBag.isDonVi;
    var dicCountTab = (Dictionary<string, int>)ViewBag.dicCountTab;
}
<div class="row">
    <div class="col right-content">
        <div class="row">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb bg-transparent mb-0 fwb">
                        <li class="breadcrumb-item"><a href="/Home"><i class="fas fa-home"></i></a></li>
                        <li class="breadcrumb-item">@ViewBag.Title</li>
                    </ol>
                </nav>
            </div>
        </div>
        @if (TempData["AlertData"] != null)
            {
            <div class="alert @TempData["AlertType"]">
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>@Html.Raw(TempData["AlertData"])</strong>
                <a id="lblMessage"></a>
            </div>
        }
        <div class="row">
            <div class="col">
                <!-- Classic tabs -->
                <div class="classic-tabs tabs-f-cl mx-2">
                    <input type="hidden" name="tab" id="tab" value="@Model.tab" />
                    <ul class="nav f-bg1 flex-nowrap fwb" id="myClassicTabShadow" role="tablist">
                        <li class="nav-item">
                            <a href="/HoSoCongViec" class="nav-link waves-light @(Model.tab == "tc" ? "active show" : "")" title="Tất cả">Tất cả (@dicCountTab["tab_tatca"])</a>
                        </li>
                        @if (SessionInfo.CurrentUser.TenDangNhap != "admin")
                        {
                            @*<li class="nav-item">
                                <a href="/HoSoCongViec" class="nav-link waves-light @(Model.tab == "tc" ? "active show" : "")" title="Tất cả">Tất cả (@dicCountTab["tab_tatca"])</a>
                            </li>*@
                            <li class="nav-item">
                                <a href="/HoSoCongViec?tab=cxl" class="nav-link waves-light @(Model.tab == "cxl" ? "active show" : "")" title="Chưa xử lý">Chưa xử lý (@dicCountTab["tab_chuaxuly"])</a>
                            </li>
                            <li class="nav-item">
                                <a href="/HoSoCongViec?tab=dxl" class="nav-link waves-light @(Model.tab == "dxl" ? "active show" : "")" title="Đang xử lý">Đang xử lý (@dicCountTab["tab_dangxuly"])</a>
                            </li>
                            <li class="nav-item">
                                <a href="/HoSoCongViec?tab=ht" class="nav-link waves-light @(Model.tab == "ht" ? "active show" : "")" title="Hoàn thành">Hoàn thành (@dicCountTab["tab_hoanthanh"])</a>
                            </li>
                            <li class="nav-item">
                                <a href="/HoSoCongViec?tab=dh" class="nav-link waves-light @(Model.tab == "dh" ? "active show" : "")" title="Đến hạn">Đến hạn (@dicCountTab["tab_denhan"])</a>
                            </li>
                            <li class="nav-item">
                                <a href="/HoSoCongViec?tab=qh" class="nav-link waves-light @(Model.tab == "qh" ? "active show" : "")" title="Quá hạn">Quá hạn (@dicCountTab["tab_quahan"])</a>
                            </li>
                            <li class="nav-item">
                                <a href="/HoSoCongViec?tab=gxl" class="nav-link waves-light @(Model.tab == "gxl" ? "active show" : "")" title="Giao xử lý">Giao xử lý (@dicCountTab["tab_giaoxuly"])</a>
                            </li>
                        }
                    </ul>
                    <div class="tab-content py-0 card" id="myClassicTabContentShadow">
                        <div class="tab-pane fade active show" id="vb-lt-den" role="tabpanel" aria-labelledby="profile-tab-classic-shadow">
                            <div class="row mt-2">
                                <div class="col-md-9 fwb">
                                    Tìm kiếm công việc
                                </div>
                                <div class="col-md-3 text-right">
                                    <a class="btn-floating btn-sm btn-warning mx-1" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" title="Tìm kiếm" data-original-title="Tìm kiếm">
                                        <i class="fal fa-search"></i>
                                    </a>
                                    <a href="/HoSoCongViec/Add" class="btn-floating btn-sm btn-primary mx-1" data-toggle="tooltip" title="Thêm mới" data-original-title="Thêm mới"><i class="fal fa-plus"></i></a>
                                </div>
                            </div>
                            <div class="row bg-white mx-0">
                                <div class="col-12 col-lg-12 row">
                                    <label for="txtTuKhoa" class="col-lg-2 col-form-label">Từ khóa</label>
                                    <div class="col-lg-4">
                                        @Html.TextBoxFor(model => model.TuKhoa, new { @class = "form-control keyenter", @id = "txtTuKhoa" })
                                    </div>
                                    <label for="ddlPhamViTimKiem" class="col-sm-2 col-form-label">Phạm vi tìm kiếm</label>
                                    <div class="col-sm-4">
                                        <div>
                                            <select class="mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0" multiple id="ddlPhamViTimKiem" name="PhamViTimKiem" searchable="Nhập từ khóa..">
                                                <option value="tencongviec" selected>Tên công việc</option>
                                                <option value="motacongviec" selected>Mô tả công việc</option>
                                                <option value="ghichu" selected>Ghi chú</option>
                                                <option value="ketquaxuly" selected>Kết quả xử lý</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="collapse" id="collapseExample">
                                <div class="row bg-white mx-0">
                                    <div class="col-12 col-lg-12 row">
                                        <label for="TrangThaiCongViecID" class="col-lg-2 col-form-label">Trạng thái công việc</label>
                                        <div class="col-lg-4">
                                            <select class="mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0" id="TrangThaiCongViecID" searchable="Nhập từ khóa..">
                                                <option value="">-- Chọn trạng thái công việc --</option>
                                                <option value="1">Chờ xử lý</option>
                                                <option value="3">Đang xử lý</option>
                                                <option value="4">Hoàn thành</option>
                                            </select>
                                        </div>
                                        @if (typeUser.Equals("ldc"))
                                        {
                                            <label for="DonViXuLyChinhID" class="col-lg-2 col-form-label">Đơn vị xử lý chính</label>
                                            <div class="col-lg-4">
                                                @Html.DropDownListFor(model => model.DonViXuLyChinhID, new SelectList(Model.lstDonViXuLyChinh.Where(g => g.ID != 0), "ID", "TenVaKyHieu"), "-- Chọn đơn vị xử lý chính --", new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "DonViXuLyChinhID", @searchable="Nhập từ khóa.." })
                                            </div>
                                        }
                                        else
                                        {
                                            <label for="CanBoXuLyChinhID" class="col-lg-2 col-form-label">Cán bộ xử lý chính</label>
                                                <div class="col-lg-4">
                                                    @Html.DropDownListFor(model => model.CanBoXuLyChinhID, new SelectList(Model.lstCanBoXuLyChinh.Where(g => g.ID != 0), "ID", "HoVaTen"), "-- Chọn --", new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "CanBoXuLyChinhID", @searchable = "Nhập từ khóa.." })
                                                </div>
                                        }
                                    </div>
                                    <div class="w-100"></div>
                                    <p class="fwb mb-0 pl-3">Ngày tạo</p>
                                    <div class="col-12 col-lg-12 row">
                                        <label for="txtTuNgayNT" class="col-lg-2 col-form-label">Từ ngày</label>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div class="input-group date datepicker">
                                                    @Html.TextBoxFor(model => model.TuNgayNT, new { @class = "form-control ", @id = "txtTuNgayNT" })
                                                    <span class="input-group-addon">
                                                        <span class="fa fa-clock"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="txtDenNgayNT" class="col-lg-2 col-form-label">Đến ngày</label>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div class="input-group date datepicker">
                                                    @Html.TextBoxFor(model => model.DenNgayNT, new { @class = "form-control ", @id = "txtDenNgayNT" })
                                                    <span class="input-group-addon">
                                                        <span class="fa fa-clock"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="w-100"></div>
                                    <p class="fwb mb-0 pl-3">Hạn xử lý</p>
                                    <div class="col-12 col-lg-12 row">
                                        <label for="txtTuNgayHXL" class="col-lg-2 col-form-label">Từ ngày</label>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div class="input-group date datepicker">
                                                    @Html.TextBoxFor(model => model.TuNgayHXL, new { @class = "form-control ", @id = "txtTuNgayHXL" })
                                                    <span class="input-group-addon">
                                                        <span class="fa fa-clock"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="txtDenNgayHXL" class="col-lg-2 col-form-label">Đến ngày</label>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div class="input-group date datepicker">
                                                    @Html.TextBoxFor(model => model.DenNgayHXL, new { @class = "form-control ", @id = "txtDenNgayHXL" })
                                                    <span class="input-group-addon">
                                                        <span class="fa fa-clock"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="w-100"></div>
                                    <div class="col text-center text-lg-right">
                                        <button id="btnSearch" class="btn text-white f-bg1" type="button">Tìm kiếm</button>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-12">
                                    <div class="table-responsive-sm">
                                        <table class="table table-hover table-bordered" cellspacing="0" width="100%">
                                            <thead class="bg-primary text-white lighten-3">
                                                <tr>
                                                    <th class="t_action th-sm">STT</th>
                                                    <th class="th-sm pointer" data-colname="TenCongViec" data-orderby="asc">Tên công việc</th>
                                                    <th class="th-sm pointer" data-colname="MoTaCongViec" data-orderby="asc" style="width:330px">Mô tả công việc</th>
                                                    <th class="th-sm pointer">Ngày tạo</th>
                                                    <th class="th-sm pointer">Xử lý chính</th>
                                                    <th class="th-sm pointer">Hạn xử lý</th>
                                                    <th class="th-sm pointer">Bút phê</th>
                                                    <th class="th-sm pointer">Kết quả xử lý</th>
                                                    <th class="th-sm pointer">Trạng thái</th>
                                                    @*<th class="th-sm pointer">Quá trình</th>*@
                                                    <th class="th-sm pointer">Chức năng</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tbKetQua">
                                                @{ Html.RenderAction("IndexDetail", Model); }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    span.select2 {
        padding-top: 4px !important;
    }
</style>
@section Script {
    <script>
        $(document).ready(function () {
            InitClickCheckAllInTable("chkall", function (res) {
                $("#hdfID").val(res);
            });
            //loadPaging();
        });

        function onChangeStatus(id) {
            swal({
                title: "Thay đổi trạng thái?",
                text: "Trạng thái sẽ được thay đổi, hãy nhấn OK!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '/HoSoCongViec/onChangeStatus',
                        data: { id: id },
                        dataType: "html",
                        success: function (res) {
                            res = JSON.parse(res);
                            if (res.isSuccess)
                                swal("Thay đổi trạng thái thành công!", {
                                    icon: "success",
                                });
                            else
                                swal("Có lỗi xảy ra", {
                                    icon: "error",
                                });
                            loadData("", "");
                        },
                        error: function (response) {
                            swal("Đã có lỗi xảy ra", { icon: "error", });
                        }
                    });

                }
            });
        }
        function loadfrmView(id) {
            modal.Render("/HoSoCongViec/Detail/" + id, "Thông tin hồ sơ công việc", "modal-lg");
        }
        function onQuaTrinhXuLy(id, rootid) {
            modal.Render('/HoSoCongViec/QuaTrinhXuLyCongViec?cvid=' + id + '&rootid=' + rootid, 'Quá trình xử lý công việc', 'modal-lg');
        }

        function onDelete(id) {
            swal({
                title: "Xóa?",
                text: "Bạn có chắc chăn muốn xóa công việc này?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
              .then((willDelete) => {
                  if (willDelete) {
                      $.ajax({
                          type: "POST",
                          url: '/HoSoCongViec/Delete',
                          data: { id: id },
                          dataType: "html",
                          success: function (res) {
                              res = JSON.parse(res);
                              if (res.isSuccess == 1)
                                  swal("Xóa công việc thành công!", {
                                      icon: "success",
                                  });
                              else
                                  swal("Đã có lỗi xảy ra", { icon: "error", });
                              loadData("", "");
                          },
                          error: function (response) {
                              swal("Đã có lỗi xảy ra", { icon: "error", });
                          }
                      });

                  }
              });
        }
        function onDeleteMul() {
            if ($("table tbody").find("input[type=checkbox]:checked").length == 0) {
                swal("Bạn cần chọn ít nhất 1 danh mục cần xóa", { icon: "error", });
            } else {
                swal({
                    title: "Xóa?",
                    text: "Bạn có chắc chăn muốn xóa những hồ sơ công việc này?",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
             .then((willDelete) => {
                 if (willDelete) {
                     $.ajax({
                         type: "POST",
                         url: '/HoSoCongViec/DeleteMul',
                         data: { lstid: $("#hdfID").val() },
                         dataType: "html",
                         success: function (res) {
                             res = JSON.parse(res);
                             if (res.isSuccess)
                                 swal("Xóa thành công!", {
                                     icon: "success",
                                 });
                             else
                                 swal("Có lỗi xảy ra", {
                                     icon: "error",
                                 });
                             loadData("", "");
                         },
                         error: function (response) {
                             swal("Đã có lỗi xảy ra", { icon: "error", });
                         }
                     });

                 }
             });
            }
        }
        $(".keyenter").on("keypress", function (e) {
            if (e.which == 13) {
                $("#btnSearch").click();
            }
        });

        function setDeleteId(id) {
            $("#delModalId").val(id);
        };

        //Thêm event xử lý load ajax
        $("#btnSearch").click(function () {
            loadData("", "");
        });

        $("table th").click(function () {
            var col = $(this).data("colname");
            var orderby = $(this).data("orderby");
            if (col != "" && orderby != null) {
                loadData(col, orderby);
                if (orderby == "desc") orderby = "asc";
                else orderby = "desc";
                $(this).data("orderby", orderby);
            }
        });
        //, SoKyHieu: $("#txtSoKyHieu").val(), LoaiVanBanID: $("#LoaiVanBanID").val(), TrichYeu: $("#txtTrichYeu").val()
        function loadData(col, order, pnum, psize) {
            if ($("#txtTuKhoa").val().length > 250) {
                swal("Không nhập quá 250 ký tự", { icon: "error", });
            } else {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("IndexDetail", "HoSoCongViec")',
                    data: { TuKhoa: $("#txtTuKhoa").val(), PhamViTimKiem: $("#ddlPhamViTimKiem").val().toString(), TrangThaiCongViecID: $("#TrangThaiCongViecID").val(), DonViXuLyChinhID: $("#DonViXuLyChinhID").val(), TuNgayNT: $("#txtTuNgayNT").val(), DenNgayNT: $("#txtDenNgayNT").val(), TuNgayHXL: $("#txtTuNgayHXL").val(), DenNgayHXL: $("#txtDenNgayHXL").val(), ColumnName: col, OrderBy: order, PageNumber: pnum, PageSize: $("#changePageSize").val(), tab: $("#tab").val() },
                    dataType: "html",
                    success: function (response) {
                        $("#tbKetQua").html(response);
                        loadPaging();
                    },
                    error: function (response) {
                        swal("Đã có lỗi xảy ra", { icon: "error", });
                    }
                });
            }
        }
        function loadPaging() {
            var total = Math.ceil($("#txtTotal").val() / $("#changePageSize").val());
            var pnum = $("#txtPageNumber").val();
            $(".PagedList-pageCountAndLocation").removeClass("disabled");
            $(".PagedList-pageCountAndLocation").html("<a style=\"padding: 5px\"> Trang <input type=\"text\" id=\"pageNumber\" name=\"PageNunber\" value=\"" + pnum + "\" min=\"0\" style=\"width: 40px;\" onchange=\"onChangePageNunber($(this).val()," + total + ")\"> / " + total + "</a>");
        }

        //Nhảy trang
        function onChangePageNunber(pagenumber, totalpagesize) {

            var reg = /^[0-9]+$/;
            if (pagenumber.match(reg)) {
                if (pagenumber <= 0) {
                    swal("Giá trị của trang phải lớn hơn 0!", { icon: "error", });
                }
                else if (pagenumber > totalpagesize) {
                    swal("Bạn đã nhập quá số trang hiện có!", { icon: "error", });
                }
                else {
                    loadData("", "", pagenumber);
                }
            } else {
                swal("Bạn đã nhập sai định dạng số", { icon: "error", });
            }

        }
    </script>
}