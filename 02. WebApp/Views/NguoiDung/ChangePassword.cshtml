@model TKM.BLL.ChangePassViewModel
@{
    ViewBag.Title = "Thay đổi mật khẩu";
}
<div class="row">
    <div class="col right-content">
        <div class="row">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb bg-transparent mb-0 fwb">
                        <li class="breadcrumb-item"><a href="/Home"><i class="fas fa-home"></i></a></li>
                        <li class="breadcrumb-item">@ViewBag.Title</li>
                    </ol>
                </nav>
            </div>
        </div>
        @if (TempData["AlertData"] != null)
            { <div class="alert @TempData["AlertType"]">
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>@Html.Raw(TempData["AlertData"])</strong>
                <a id="lblMessage"></a>
            </div>

        }
        <div class="row">
            <div class="col">
                <!-- Classic tabs -->
                <div class="classic-tabs tabs-f-cl mx-2">
                    <div class="tab-content py-0 card" id="myClassicTabContentShadow">
                        <div class="tab-pane fade active show pt20" id="vb-lt-den" role="tabpanel" aria-labelledby="profile-tab-classic-shadow">
                            @using (Ajax.BeginForm("ChangePassword", "NguoiDung", null, new AjaxOptions
                            {
                                HttpMethod = "POST",
                                OnSuccess = "onUpdateSuccess"
                            }, new { @id = "fForm" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(m => m.ID)

                                <div class="form-group row">
                                    <div class="col-sm-3"></div>
                                    <label for="HoVaTen" class="col-sm-2 col-form-label">Mật khẩu hiện tại <span class="c-red-500">(*)</span></label>
                                    <div class="col-sm-4">
                                        @Html.PasswordFor(model => model.MatKhau, new { @class = "form-control " })
                                    </div>
                                </div>

                                    <div class="form-group row">
                                        <div class="col-sm-3"></div>
                                        <label for="ChucVuID" class="col-sm-2 col-form-label">Mật khẩu mới <span class="c-red-500">(*)</span></label>
                                        <div class="col-sm-4">
                                            @Html.PasswordFor(model => model.MatKhauMoi, new { @class = "form-control "})
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-sm-3"></div>
                                        <label for="SoDienThoai" class="col-sm-2 col-form-label">Nhập lại mật khẩu <span class="c-red-500">(*)</span></label>
                                        <div class="col-sm-4">
                                            @Html.PasswordFor(model => model.NhapLaiMatKhau, new { @class = "form-control " })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="text-right col-sm-9">
                                            <button type="submit" class="btn btn-primary" id="btn-luu">Lưu</button>
                                            <a class="btn cur-p btn-light" href="/">Hủy bỏ</a>
                                        </div>
                                    </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Script {
    <script>
        $(document).ready(function () {
            $('.groupCheck input[type=checkbox][name=IsLanhDao]').on('click', function () {
                var prop = $(this).is(':checked');
                if (prop) {
                    $('#idCheckCapBac').removeClass('dn');
                } else {
                    $('#idCheckCapBac').addClass('dn');
                }
            });
            var checkLanhDao = $('.groupCheck input[type=checkbox][name=IsLanhDao]').is(':checked');
            if (checkLanhDao) {
                $('#idCheckCapBac').removeClass('dn');
            } else {
                $('#idCheckCapBac').addClass('dn');
            }
        })
        function onUpdateSuccess(res) {
            if (res.isSuccess == true) {
                toastr.success('Cập nhật người dùng thành công.');
                window.location.href = '/';
            } else {
                if (res.message != "")
                    toastr.error(res.message);
                else
                    toastr.error('Có lỗi khi cập nhật người dùng.');
            }
        };
        $("#fForm").validate({
            rules: {
                MatKhau: {
                    required: true,
                    minlength: 6,
                },
                XacNhanMatKhau: {
                    required: true,
                    minlength: 6,
                    equalTo: '#MatKhau'
                },
                HoVaTen: {
                    required: true,
                },
                Email: {
                    email: true,
                },

            },
            messages: {

                MatKhau: {
                    required: "Vui lòng nhập mật khẩu!",
                    minlength: "Mật khẩu tối thiểu 6 ký tự",
                },
                XacNhanMatKhau: {
                    required: "Vui lòng nhập xác nhận mật khẩu!",
                    minlength: "Xác nhận mật khẩu tối thiểu 6 ký tự",
                    equalTo: "Mật khẩu không trùng khớp"
                },
                HoVaTen: {
                    required: "Vui lòng nhập họ và tên!",
                },
                Email: {
                    email: "Vui lòng nhập đúng định danh email!",
                },
            }
        });
        $('#fForm').on('submit', function () {
            $("#fForm").valid();
            
            var donviid = $('#DonViID').val();
            var nhomquyenid = $('#NhomQuyenID').val();
            var chucvuid = $('#ChucVuID').val();
            if (donviid == '0' || donviid == '') {
                toastr.error('Bạn chưa chọn đơn vị!');
                //$('#btn-luu').prop('disabled', false);
                return false;
            }
            if (nhomquyenid == '0' || nhomquyenid == '') {
                toastr.error('Bạn chưa chọn nhóm quyền!');
                //$('#btn-luu').prop('disabled', false);
                return false;
            }
            if (chucvuid == '0' || chucvuid == '') {
                toastr.error('Bạn chưa chọn chức vụ!');
                //$('#btn-luu').prop('disabled', false);

                return false;
            }
            var checkGroup = $('.groupCheck input[type=checkbox]:checked').length;
            if (checkGroup > 1) {
                toastr.error('Chỉ được chọn 1 chức danh!');
                //$('#btn-luu').prop('disabled', false);
                return false;
            }
            var checkLanhDao = $('.groupCheck input[type=checkbox][name=IsLanhDao]').is(':checked');
            if (checkLanhDao) {
                var checkCapBac = $('.groupCheckCapBac input[type=radio][name=IsTruong]:checked').length;
                if (checkCapBac == 0 || checkCapBac == undefined) {
                    toastr.error('Bạn chưa chọn cấp bậc!');
                    //$('#btn-luu').prop('disabled', false);
                    return false;
                }
            }
            //$('#btn-luu').prop('disabled', true);
            return true;
        })
    </script>
}
