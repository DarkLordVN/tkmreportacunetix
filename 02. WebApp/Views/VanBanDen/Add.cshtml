@using TKM.BLL
@model VanBanDenViewModel
@{
    Layout = "~/Views/Shared/_LayoutHiddenTop.cshtml";
    ViewBag.Title = "Thêm mới văn bản đến";
    var typeUser = (string)ViewBag.typeUser;
    var lstLanguage = (Dictionary<int, string>)ViewBag.lstLanguage;
}
<script src="~/Scripts/jquery.validate.min.js"></script>
<div class="row">
    <div class="col right-content">
        <div class="row">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb bg-transparent mb-0 fwb">
                        <li class="breadcrumb-item"><a href="/Home"><i class="fas fa-home"></i></a></li>
                        <li class="breadcrumb-item"><a href="/VanBanDen">Danh sách văn bản đến</a></li>
                        <li class="breadcrumb-item">@ViewBag.Title</li>
                    </ol>
                </nav>
            </div>
        </div>
        @if (TempData["AlertData"] != null)
        {
            <div class="alert @TempData["AlertType"]">
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>@Html.Raw(@TempData["AlertData"])</strong>
                <a id="lblMessage"></a>
            </div>
        }
        <div class="row">
            <div class="col">
                <!-- Classic tabs -->
                <div class="classic-tabs tabs-f-cl mx-2">
                    <div class="tab-content py-0 card" id="myClassicTabContentShadow">
                        <div class="tab-pane fade active show pt20" id="vb-lt-den" role="tabpanel" aria-labelledby="profile-tab-classic-shadow">
                            @using (Ajax.BeginForm("Add", "VanBanDen", null, new AjaxOptions
                            {
                                HttpMethod = "POST",
                                OnSuccess = "onAddSuccess"
                            }, new { @id = "fFormVanBan", enctype = "multipart/form-data" }))
                            {

                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(m => m.FileVanBan, new { @id = "ModelFileVanBan" })

                                <input type="hidden" name="LoaiHinhVanBanChinh" value="den" />
                                <input type="hidden" id="typeSubmit" name="typeSubmit" value="luu" />
                                <input type="hidden" id="type" name="type" value="@typeUser" />
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-check form-check-inline">
                                            <input type="checkbox" class="form-check-input" id="IsThemTIep" name="IsThemTIep" value="true">
                                            <label class="form-check-label" for="IsThemTIep">Thêm liên tiếp</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <label for="SoVanBanDenID" class="col-sm-2 col-form-label">Sổ văn bản <span class="c-red-500">(*)</span></label>
                                    <div class="col-sm-4">
                                        <div class="fl w90pt" id="reloadSoVanBanDen">
                                            @{
                                                var lstSoVanBanDen = Model.lstSoVanBanDen.Where(g => g.DonViID == SessionInfo.CurrentUser.DonViID);
                                                var objLastSoVanBan = new SoVanBanDenViewModel();
                                                if (lstSoVanBanDen != null && lstSoVanBanDen.Count() > 0)
                                                {
                                                    objLastSoVanBan = lstSoVanBanDen.FirstOrDefault();
                                                }
                                            }
                                            @if (objLastSoVanBan != null)
                                            {
                                                @Html.DropDownListFor(model => model.SoVanBanDenID, new SelectList(Model.lstSoVanBanDen.Where(g => g.DonViID == SessionInfo.CurrentUser.DonViID), "ID", "Ten", objLastSoVanBan.ID), new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "SoVanBanDenID", @searchable = "Nhập từ khóa.." })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(model => model.SoVanBanDenID, new SelectList(Model.lstSoVanBanDen.Where(g => g.DonViID == SessionInfo.CurrentUser.DonViID), "ID", "Ten"), new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "SoVanBanDenID", @searchable = "Nhập từ khóa.." })
                                            }

                                        </div>
                                        <div class="fl w10pt">
                                            <a href="javascript://" onclick="onAddSoVanBan()" style="padding:.3rem 0.6rem" class="btn text-white btn-default btn-sm pointer" data-toggle="tooltip" data-original-title="Thêm mới sổ văn bản"><i class="fal fa-plus"></i></a>
                                        </div>
                                        <div class="cb"></div>
                                    </div>
                                    <label for="SoDen" class="col-sm-2 col-form-label pr-0">Số đến <span class="c-red-500">(*)</span></label>
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.SoDen, new { @class = "form-control number", @id = "SoDen", @placeholder = "0", @maxlength = "9", @type = "number" })
                                        @Html.ValidationMessageFor(model => model.SoDen, "", new { @class = "alert-danger" })
                                    </div>

                                </div>
                                <div class="row">
                                    <label for="NgayDenStr" class="col-sm-2 col-form-label">Ngày đến <span class="c-red-500">(*)</span></label>
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <div class="input-group date datepicker">
                                                @Html.TextBoxFor(model => model.NgayDenStr, new { @class = "form-control ", @id = "NgayDenStr", @Value = DateTime.Now.ToString("dd/MM/yyyy") })
                                                <span class="input-group-addon">
                                                    <span class="fa fa-clock"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <label for="LoaiVanBanID" class="col-sm-2 col-form-label">Loại văn bản <span class="c-red-500">(*)</span></label>
                                    <div class="col-sm-4">
                                        @Html.DropDownListFor(model => model.LoaiVanBanID, new SelectList(Model.lstLoaiVanBan.Where(x => x.ID != 0), "ID", "TenLoaiVanBan", Model.LoaiVanBanID), new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "LoaiVanBanID", @searchable = "Nhập từ khóa.." })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="SoKyHieu" class="col-sm-2 col-form-label pr-0">Số ký hiệu <span class="c-red-500">(*)</span></label>
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.SoKyHieu, new { @class = "form-control", @id = "SoKyHieu" })
                                    </div>
                                    <label for="NgayVanBanStr" class="col-sm-2 col-form-label">Ngày ban hành <span class="c-red-500">(*)</span></label>
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <div class="input-group date datepicker">
                                                @Html.TextBoxFor(model => model.NgayVanBanStr, new { @class = "form-control ", @id = "NgayVanBanStr", @Value = Model.NgayVanBanStr })
                                                <span class="input-group-addon">
                                                    <span class="fa fa-clock"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="TrichYeu" class="col-sm-2 col-form-label">Trích yếu <span class="c-red-500">(*)</span></label>
                                    <div class="col-sm-10">
                                        @Html.TextAreaFor(model => model.TrichYeu, new { @class = "form-control rounded-0", @id = "TrichYeu", @rows = "2" })
                                    </div>
                                </div>

                                                    <div class="row">
                                                        <label for="CoQuanBanHanhID" class="col-sm-2 col-form-label">
                                                            Cơ quan ban hành <span class="c-red-500">(*)</span>
                                                        </label>
                                                        <div class="col-sm-4">
                                                            <div class="fl w90pt" id="reloadCoQuanBanHanh">
                                                                @Html.DropDownListFor(model => model.CoQuanBanHanhID, new SelectList(Model.lstCoQuanBanHanh.Where(x => x.ID != 0), "ID", "TenVaKyHieu", Model.CoQuanBanHanhID), "-- Chọn cơ quan ban hành --", new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "CoQuanBanHanhID", @searchable = "Nhập từ khóa.." })
                                                            </div>
                                                            <div class="fl w10pt">
                                                                <a href="javascript://" onclick="onAddCoQuanBanHanh()" style="padding:.3rem 0.6rem" class="btn text-white btn-default btn-sm pointer" data-toggle="tooltip" data-original-title="Thêm mới cơ quan ban hành"><i class="fal fa-plus"></i></a>
                                                            </div>
                                                            <div class="cb"></div>
                                                        </div>
                                                        <label for="DoiTuongGuiVanBanDenID" class="col-sm-2 col-form-label">
                                                            Đối tượng gửi vb đến <span class="c-red-500">(*)</span>
                                                        </label>
                                                        <div class="col-sm-4">
                                                            @Html.DropDownListFor(model => model.DoiTuongGuiVanBanDenID, new SelectList(Model.lstDoiTuongGuiVanBanDen.Where(x => x.ID != 0), "ID", "TenVaKyHieu", Model.DoiTuongGuiVanBanDenID), "-- Chọn đối tượng gửi văn bản đến --", new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "DoiTuongGuiVanBanDenID", @searchable = "Nhập từ khóa.." })
                                                        </div>
                                                    </div>
                                                        <div class="row">
                                                            <label for="DonViID" class="col-sm-2 col-form-label">
                                                                Đơn vị nhận
                                                            </label>
                                                            <div class="col-sm-4">
                                                                @Html.DropDownListFor(model => model.DonViID, new SelectList(Model.lstDonViNhanForm, "ID", "TenVaKyHieu", Model.DonViID), new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "DonViID", @searchable = "Nhập từ khóa.." })

                                                            </div>
                                                            <label for="NguoiKy" class="col-sm-2 col-form-label pr-0">Người ký</label>
                                                            <div class="col-sm-4">
                                                                @Html.TextBoxFor(model => model.NguoiKy, new { @class = "form-control", @id = "NguoiKy" })
                                                            </div>

                                                        </div>
                                                        <div class="row">
                                                            <label for="ChucVuNguoiKy" class="col-sm-2 col-form-label pr-0">Chức vụ người ký</label>
                                                            <div class="col-sm-4">
                                                                @Html.TextBoxFor(model => model.ChucVuNguoiKy, new { @class = "form-control", @id = "ChucVuNguoiKy" })
                                                            </div>
                                                            <label for="DoKhanID" class="col-sm-2 col-form-label">
                                                                Độ khẩn
                                                            </label>
                                                            <div class="col-sm-4">
                                                                @Html.DropDownListFor(model => model.DoKhanID, new SelectList(Model.lstDoKhan.Where(x => x.ID != 0), "ID", "TenDoKhan", Model.DoKhanID), new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "DoKhanID", @searchable = "Nhập từ khóa.." })
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <label for="LinhVucID" class="col-sm-2 col-form-label">
                                                                Lĩnh vực
                                                            </label>
                                                            <div class="col-sm-4">
                                                                @Html.DropDownListFor(model => model.LinhVucID, new SelectList(Model.lstLinhVucDangKiem.Where(x => x.ID != 0), "ID", "TenVaKyHieu", Model.LinhVucID), "-- Chọn lĩnh vực --", new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "LinhVucID", @searchable = "Nhập từ khóa.." })
                                                            </div>
                                                            <label for="NgonNguID" class="col-sm-2 col-form-label">
                                                                Ngôn ngữ
                                                            </label>
                                                            <div class="col-sm-4">
                                                                <select class="mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0" id="NgonNguID" name="NgonNguID" searchable="Nhập từ khóa..">
                                                                    @if (lstLanguage != null && lstLanguage.Count > 0)
                                                                    {
                                                                        foreach (var itemNN in lstLanguage.Keys)
                                                                        {
                                                                            <option value="@itemNN" @(itemNN == Model.NgonNguID ? "selected" : "")>@lstLanguage.Values.ElementAt(itemNN)</option>
                                                                        }
                                                                    }
                                                                </select>
                                                            </div>

                                                        </div>
                                                        <div class="form-group row">
                                                            <label for="SoTrang" class="col-sm-2 col-form-label pr-0">Số trang</label>
                                                            <div class="col-sm-4">
                                                                @Html.TextBoxFor(model => model.SoTrang, new { @class = "form-control number", @id = "SoTrang", @placeholder = "0", @maxlength = "9" })
                                                            </div>
                                                            <label for="ThoiHanGiaiQuyetStr" class="col-sm-2 col-form-label">Thời hạn giải quyết</label>
                                                            <div class="col-sm-4">
                                                                <div class="form-group">
                                                                    <div class="input-group date datepicker">
                                                                        @Html.TextBoxFor(model => model.ThoiHanGiaiQuyetStr, new { @class = "form-control ", @id = "ThoiHanGiaiQuyetStr", @Value = Model.ThoiHanGiaiQuyetStr })
                                                                        <span class="input-group-addon">
                                                                            <span class="fa fa-clock"></span>
                                                                        </span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <label class="col-sm-2 col-form-label pt10">
                                                                File văn bản @*<span class="c-red-500">(*)</span>*@
                                                            </label>
                                                            <div class="col-sm-10">
                                                                @*@Html.TextBoxFor(m => m.Files, new { @id = "txtFile", @type = "file", @multiple = "multiple", @onclick = "IsSubmit();" })*@
                                                                @Html.Partial("~/Views/Shared/_JqueryUpload.cshtml", new { changeName = true, auto = true, Name = "Attachment", Multiple = true, Value = "", type = "document", setname = "AttachmentName", valueName = "", setSize = "Size", valueSize = "", intFolder = 2 })
                                                            </div>
                                                        </div>
                                                        <div class="form-group row">
                                                            <label for="GhiChu" class="col-sm-2 col-form-label">Ghi chú</label>
                                                            <div class="col-sm-10">
                                                                @Html.TextAreaFor(model => model.GhiChu, new { @class = "form-control rounded-0", @id = "GhiChu", @rows = "1" })
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-sm-2 fwb" style="padding-top:30px;padding-bottom:30px">
                                                                Văn bản liên quan
                                                            </div>
                                                            <div class="col-sm-10">
                                                                <a href="javascript://" class="fr h-tdu" style="color:#0b51c5;" onclick="onPopupAddVanBanLienQuan();" title="Chọn văn bản liên quan">Chọn văn bản liên quan</a>
                                                                <table class="table table-hover table-bordered" cellspacing="0" width="100%">
                                                                    <thead>
                                                                        <tr>
                                                                            <th style="width:150px">Số ký hiệu</th>
                                                                            <th>Trích yếu</th>
                                                                            <th style="width:85px">File</th>
                                                                            <th style="width:200px">Quan hệ liên kết <span class="c-red-500">(*)</span></th>
                                                                            <th style="width:85px">Thao tác</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody id="reloadTableLienQuan">
                                                                        <input type="hidden" name="VanBanLienQuanID" value="0" />
                                                                        <input type="hidden" name="LoaiHinhVanBanLienKet" value="" />
                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                        </div>
                                                        <div class="form-group row">
                                                            <div class="text-right col-sm-12">
                                                                <button type="submit" class="btn btn-primary" id="btn-luu">Lưu</button>
                                                                <button type="button" class="btn btn-primary" id="luuvanhaptiep">Lưu, nhập tiếp</button>
                                                                <button type="button" id="luuvatrinhlanhdao" class="btn btn-primary">Trình lãnh đạo</button>
                                                                <button type="button" id="luuvaduaykienxuly" class="btn btn-primary">Đưa ý kiến xử lý</button>
                                                                @if (typeUser.Equals("vtc"))
                                                                {
                                                                    <button type="button" id="luuvachuyenxuly" class="btn btn-primary">Chuyển xử lý</button>
                                                                }
                                                                <a class="btn btn-primary" href="/VanBanDen">Đóng</a>
                                                            </div>
                                                        </div>
                                                                    }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var soVanBanDenID = $('#SoVanBanDenID').val();
        if (soVanBanDenID != 0) {
            $.ajax({
                type: "GET",
                url: '/VanBanDen/GetSoDenCuaSoVanBan',
                data: { id: soVanBanDenID },
                dataType: "html",
                success: function (res) {
                    res = JSON.parse(res);
                    $('#SoDen').val(res.soDen);
                    $('#SoDen').focus();
                },
                error: function (response) {
                    $('#SoDen').val('');
                }
            });
        }
    });
    $('#SoKyHieu').on("keyup", function () {
        $(this).val($(this).val().toUpperCase());
    })
    function RemoveItem(id) {
        $('.removed_' + id).remove();
    }
    $('#SoVanBanDenID').on('change', function () {
        var value = $(this).val();
        if (value == '') {
            $('#SoDen').val('');
        }
        else {
            $.ajax({
                type: "GET",
                url: '/VanBanDen/GetSoDenCuaSoVanBan',
                data: { id: $(this).val() },
                dataType: "html",
                success: function (res) {
                    res = JSON.parse(res);
                    $('#SoDen').val(res.soDen);
                    $('#SoDen').focus();
                },
                error: function (response) {
                    $('#SoDen').val('');
                }
            });
        }
    });
    //$('#SoDen').on('keyup', function () {

    //    var sovanbanden = $('#SoVanBanDenID').val();
    //    if (sovanbanden == '') {
    //        toastr.error('Bạn chưa chọn sổ văn bản sổ văn bản.');
    //        return false;
    //    }
    //    else {
    //        if ($('#SoDen').val() == '') {
    //            toastr.error('Bạn chưa nhập số đến!');
    //            $('#SoDen').focus();
    //            return false;
    //        }
    //        else if ($('#SoDen').val() <= 0) {
    //            toastr.error('Số đến phải lớn hơn 0!');
    //            $('#SoDen').focus();
    //            return false;
    //        } else if ($('#SoDen').val().toString().length > 9) {
    //            toastr.error('Số đến chỉ nhập tối đa 9 ký tự!');
    //            $('#SoDen').focus();
    //            return false;
    //        }
    //        else {
    //            $.ajax({
    //                type: "GET",
    //                url: '/VanBanDen/CheckSoDenHopLe',
    //                data: { id: $('#SoVanBanDenID').val(), soDen: $('#SoDen').val(), idvb: 0 },
    //                dataType: "html",
    //                success: function (res) {
    //                    res = JSON.parse(res);
    //                    if (res.isSuccess == false) {
    //                        toastr.error(res.message);
    //                        $('#SoDen').focus();
    //                        return false;
    //                    } else {
    //                        toastr.success('Số đến có thể dùng!');
    //                    }
    //                },
    //                error: function (response) {
    //                    return false;
    //                }
    //            });
    //        }
    //    }
    //});
    $('#luuvatrinhlanhdao').on('click', function (e) {
        $('#typeSubmit').val('luuvatrinh');
        $('#fFormVanBan').submit();
    });
    $('#luuvaduaykienxuly').on('click', function (e) {
        $('#typeSubmit').val('luuvabutphe');
        $('#fFormVanBan').submit();
    });
    $('#luuvachuyenxuly').on('click', function () {
        $('#typeSubmit').val('luuvachuyenxuly');
        $('#fFormVanBan').submit();
    });
    $('#luuvanhaptiep').on('click', function (e) {
        $('#typeSubmit').val('luuvanhaptiep');
        $('#fFormVanBan').submit();
    });
    function onAddSoVanBan() {
        modal.Render('/VanBanDen/PopupAddSoVanBan', 'Thêm mới sổ văn bản đến', 'modal-lg');
    }
    function onAddSoVanBanSuccess(res) {
        if (res.isSuccess == true) {
            toastr.success('Thêm mới sổ văn bản thành công.');
            $('#SoDen').val(res.soDen);
            $.ajax({
                type: "GET",
                url: '/VanBanDen/ReloadSoVanBanDen',
                data: { idNew: res.idNew },
                dataType: "html",
                success: function (res) {
                    $('#reloadSoVanBanDen').html(res);
                },
                error: function (response) {
                    swal("Đã có lỗi xảy ra", { icon: "error", });
                }
            });
            modal.hide();
        } else {
            if (res.message != "")
                toastr.error(res.message);
            else
                toastr.error('Có lỗi khi thêm mới sổ văn bản.');
        }
    };
    function onAddCoQuanBanHanh() {
        modal.Render('/VanBanDen/PopupAddCoQuanBanHanh', 'Thêm mới cơ quan ban hành', 'modal-lg');
    }
    function onAddCoQuanBanHanhSuccess(res) {
        if (res.isSuccess == true) {
            toastr.success('Thêm mới cơ quan ban hành thành công.');
            $.ajax({
                type: "GET",
                url: '/VanBanDen/ReloadCoQuanBanHanh',
                data: { idNew: res.idNew },
                dataType: "html",
                success: function (res) {
                    $('#reloadCoQuanBanHanh').html(res);
                },
                error: function (response) {
                    swal("Đã có lỗi xảy ra", { icon: "error", });
                }
            });
            modal.hide();
        } else {
            if (res.message != "")
                toastr.error(res.message);
            else
                toastr.error('Có lỗi khi thêm mới cơ quan ban hành.');
        }
    }
    function onPopupAddVanBanLienQuan() {
        var arrCheckedID = [];
        $('input[type=hidden][name=VanBanLienQuanID]').each(function () {
            arrCheckedID.push($(this).val());
        })
        arrCheckedID.splice($.inArray("0", arrCheckedID), 1);
        modal.Render('/VanBanDen/PopupAddVanBanLienQuan?lstid=' + arrCheckedID, 'Chọn văn bản liên quan', 'modal-lg');
    }
    function onAddSuccess(res) {
        $("#loading").show();
        if (res.isSuccess == true) {
            if (res.typeSubmit == 'themlientiep') {
                toastr.success('Thêm mới văn bản thành công.');
                window.location.href = '/VanBanDen/Add';
            } else if (res.typeSubmit == 'luuvanhaptiep') {
                toastr.success('Thêm mới văn bản thành công.');
                window.location.href = '/VanBanDen/Add';
            }
            else if (res.typeSubmit == 'luu') {
                toastr.success('Thêm mới văn bản thành công.');
                window.location.href = '/VanBanDen/Detail/' + res.idNew + '?tab=cxl';
            } else if (res.typeSubmit == 'luuvatrinh') {
                toastr.success('Thêm mới văn bản thành công.');
                modal.Render('/VanBanDen/TrinhLanhDao?vbid=' + res.idNew + '&act=add', 'Trình lãnh đạo', 'modal-lg');

            } else if (res.typeSubmit == 'luuvabutphe') {
                toastr.success('Thêm mới văn bản thành công.');
                modal.Render('/VanBanDen/DuaYKienXuLy?vbid=' + res.idNew + '&act=add', 'Đưa ý kiến xử lý', 'modal-lg');
            } else if (res.typeSubmit == 'luuvachuyenxuly') {
                toastr.success('Thêm mới văn bản thành công.');
                modal.Render('/VanBanDen/ChuyenXuLy?vbid=' + res.idNew + '&act=add', 'Chuyển xử lý văn bản đến', 'modal-lg');
            }
        } else {
            toastr.error(res.message);
        }
        $("#loading").hide();
    }
    function onTrinhLanhDaoSuccess(res) {
        if (res.isSuccess == true) {
            $("#loading").show();
            toastr.success('Trình lãnh đạo thành công.');
            modal.hide();
            window.location.href = '/VanBanDen';
        } else {
            toastr.error('Có lỗi khi trình lãnh đạo.');
        }
        $("#loading").hide();
    }
    function onDuaYKienXuLySuccess(res) {
        if (res.isSuccess == true) {
            $("#loading").show();
            toastr.success('Đưa ý kiến xử lý thành công.');
            modal.hide();
            window.location.href = '/VanBanDen';
        } else {
            toastr.error('Có lỗi khi đưa ý kiến xử lý.');
        }
        $("#loading").hide();
    }
    function onChuyenXuLySuccess(res) {
        if (res.isSuccess == true) {
            $("#loading").show();
            toastr.success('Chuyển xử lý cho đơn vị thành công.');
            modal.hide();
            window.location.href = '/VanBanDen';
        } else {
            if (res.message != '')
                toastr.error(res.message);
            else
                toastr.error('Có lỗi khi chuyển xử lý cho đơn vị.');
            $("#loading").hide();
        }
        $("#loading").hide();
    }


    $("#fFormVanBan").validate({
        rules: {
            SoKyHieu: {
                required: true,
            },
            TrichYeu: {
                required: true,
            },
            SoTrang: {
                min: 0,
            }
        },
        messages: {
            SoKyHieu: {
                required: "Vui lòng nhập số ký hiệu!",
            },
            TrichYeu: {
                required: "Vui lòng nhập trích yếu!",
            },
            SoTrang: {
                min: "Số trang phải bắt đầu từ 0!",
            }
        }
    });

    $('#fFormVanBan').on('submit', function () {
        $("#fFormVanBan").valid();

        $("#loading").show();
        var sokyhieu = $('#SoKyHieu').val();
        //var regex = /^[a-zA-Z/_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳýỵỷỹ]+$/;
        //if (sokyhieu != "" && sokyhieu.match(regex)) {
        //    toastr.error('Số ký hiệu không được chứa dấu và khoảng trắng!');
        //    return false;
        //}
        if (sokyhieu.includes(' ')) {
            toastr.error('Số ký hiệu không được chứa khoảng trắng!');
            $("#loading").hide();
            return false;
        }
        if (sokyhieu.length > 50) {
            toastr.error('Số ký hiệu không nhập quá 50 ký tự!');
            $("#loading").hide();
            return false;
        }
        var soden = $('#SoDen').val();
        var sovanbanid = $('#SoVanBanDenID').val();
        var loaivanbanid = $('#LoaiVanBanID').val();
        var coquanbanhanhid = $('#CoQuanBanHanhID').val();
        var ngayden = $('#NgayDenStr').val();
        var ngayvanban = $('#NgayVanBanStr').val();
        var doituongguivanbanden = $('#DoiTuongGuiVanBanDenID').val();
        if (sovanbanid == '') {
            toastr.error('Bạn chưa chọn sổ văn bản!');
            $("#loading").hide();
            return false;
        }
        if (soden == '') {
            toastr.error('Bạn chưa nhập số đến!');
            $('#SoDen').focus();
            $("#loading").hide();
            return false;
        } else {
            if (soden <= 0) {
                toastr.error('Số đến phải lớn hơn 0!');
                $('#SoDen').focus();
                $("#loading").hide();
                return false;
            }
        }
        if (loaivanbanid == '') {
            toastr.error('Bạn chưa chọn loại văn bản!');
            $('#LoaiVanBanID').focus();
            $("#loading").hide();
            return false;
        }
        if (ngayden == '') {
            toastr.error('Bạn chưa chọn ngày đến!');
            $('#NgayDenStr').focus();
            $("#loading").hide();
            return false;
        }
        if (ngayvanban == '') {
            toastr.error('Bạn chưa chọn ngày ban hành!');
            $('#NgayVanBanStr').focus();
            $("#loading").hide();
            return false;
        }
        if (coquanbanhanhid == '') {
            toastr.error('Bạn chưa chọn cơ quan ban hành!');
            $("#loading").hide();
            return false;
        }
        if (doituongguivanbanden == '') {
            toastr.error('Bạn chưa chọn đối tượng gửi văn bản đến!');
            $("#loading").hide();
            return false;
        }
        //if ($('input[type=hidden][name=linkFile]').length == 0) {
        //    toastr.error('Bạn chưa chọn file văn bản!');
        //    return false;
        //};
        var arrLoaiLienKet = [];
        $('select[name=LoaiLienKet]').each(function () {
            arrLoaiLienKet.push($(this).val());
        });
        if (arrLoaiLienKet.toString().includes('0')) {
            toastr.error('Vui lòng chọn quan hệ liên kết cho văn bản!');
            $("#loading").hide();
            return false;
        }
        //$('#btn-luu').attr("disabled", true);
    });
</script>
