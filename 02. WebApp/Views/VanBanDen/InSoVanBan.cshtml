@using PagedList.Mvc;
@model TKM.BLL.v_InSoVanBanDenListView
@{
    ViewBag.Title = "In sổ văn bản";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col right-content">
        <div class="row">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb bg-transparent mb-0 fwb">
                        <li class="breadcrumb-item"><a href="/Home"><i class="fas fa-home"></i></a></li>
                        <li class="breadcrumb-item">@ViewBag.Title</li>
                    </ol>
                </nav>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <!-- Classic tabs -->
                <div class="classic-tabs tabs-f-cl mx-2">
                    <div class="tab-content py-0 card" id="myClassicTabContentShadow">
                        <div class="tab-pane fade active show" id="vb-lt-den" role="tabpanel" aria-labelledby="profile-tab-classic-shadow">

                            <div class="row mt-2">
                                <div class="col-md-9 fwb">
                                    Tìm kiếm văn bản
                                </div>
                                <div class="col-md-3 text-right">
                                    <a class="btn-floating btn-sm btn-warning mx-1" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" title="Tìm kiếm" data-original-title="Tìm kiếm">
                                        <i class="fal fa-search"></i>
                                    </a>

                                </div>
                            </div>
                            <div class="row bg-white mx-0">
                                <div class="col-12 col-lg-12 row">
                                    <label for="txtTuKhoa" class="col-lg-2 col-form-label">Từ khóa</label>
                                    <div class="col-lg-4">
                                        @Html.TextBoxFor(model => model.TuKhoa, new { @class = "form-control keyenter", @id = "txtTuKhoa" })
                                    </div>
                                    <label for="ddlPhamViTimKiem" class="col-sm-2 col-form-label">Phạm vi tìm kiếm</label>
                                    <div class="col-sm-4">
                                        <div>
                                            <select class="mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0" multiple id="ddlPhamViTimKiem" name="PhamViTimKiem" searchable="Nhập từ khóa..">
                                                <option value="soden" selected>Số đến</option>
                                                <option value="trichyeu" selected>Trích yếu</option>
                                                <option value="sokyhieu" selected>Số ký hiệu</option>
                                                <option value="ghichu" selected>Ghi chú</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="collapse" id="collapseExample">
                                <div class="row bg-white mx-0">
                                    <div class="col-12 col-lg-12 row">
                                        <label for="SoVanBanDenID" class="col-lg-2 col-form-label">Sổ văn bản</label>
                                        <div class="col-lg-4">
                                            @Html.DropDownListFor(model => model.SoVanBanDenID, new SelectList(Model.lstSoVanBanDen.Where(x => x.DonViID == SessionInfo.CurrentUser.DonViID), "ID", "Ten"), "-- Chọn sổ văn bản --", new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "SoVanBanDenID", @searchable = "Nhập từ khóa.." })
                                        </div>
                                        <label for="NamVaoSo" class="col-lg-2 col-form-label">Năm vào sổ</label>
                                        <div class="col-lg-4">
                                            <select class="mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0" id="NamVaoSo" name="NamVaoSo" searchable="Nhập từ khóa..">
                                                <option value="">-- Chọn năm vào sổ --</option>
                                                @for (int i = DateTime.Now.Year; i >= 1900; i--)
                                                {
                                                    <option value="@i">@i</option>
                                                }
                                            </select>
                                           </div>
                                    </div>
                                    <div class="w-100"></div>
                                    <div class="col-12 col-lg-12 row">
                                        <label for="DonViNhanID" class="col-lg-2 col-form-label">Đơn vị nhận</label>
                                        <div class="col-lg-4">
                                           @Html.DropDownListFor(model => model.DonViNhanID, new SelectList(Model.lstCoQuanBanHanh.Where(x => x.ID != 0), "ID", "TenVaKyHieu"), "-- Chọn đơn vị nhận --", new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "DonViNhanID", @searchable = "Nhập từ khóa.." })
                                        </div>
                                        <label for="CoQuanBanHanhID" class="col-lg-2 col-form-label">Cơ quan ban hành</label>
                                        <div class="col-lg-4">
                                            @Html.DropDownListFor(model => model.CoQuanBanHanhID, new SelectList(Model.lstCoQuanBanHanh, "ID", "TenVaKyHieu"), new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "CoQuanBanHanhID", @searchable = "Nhập từ khóa.." })
                                        </div>
                                    </div>
                                    <div class="w-100"></div>
                                    <p class="fwb mb-0 pl-3">Ngày đến</p>
                                    <div class="col-12 col-lg-12 row">
                                        <label for="txtTuNgayND" class="col-lg-2 col-form-label">Từ ngày</label>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div class="input-group date datepicker">
                                                    @Html.TextBoxFor(model => model.TuNgayND, new { @class = "form-control keyenter", @id = "txtTuNgayND" })
                                                    <span class="input-group-addon">
                                                        <span class="fa fa-clock"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="txtDenNgayND" class="col-lg-2 col-form-label">Đến ngày</label>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div class="input-group date datepicker">
                                                    @Html.TextBoxFor(model => model.DenNgayND, new { @class = "form-control keyenter", @id = "txtDenNgayND" })
                                                    <span class="input-group-addon">
                                                        <span class="fa fa-clock"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="w-100"></div>
                                    <p class="fwb mb-0 pl-3">Ngày ban hành</p>
                                    <div class="col-12 col-lg-12 row">
                                        <label for="txtTuNgayNVB" class="col-lg-2 col-form-label">Từ ngày</label>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div class="input-group date datepicker">
                                                    @Html.TextBoxFor(model => model.TuNgayNVB, new { @class = "form-control keyenter", @id = "txtTuNgayNVB" })
                                                    <span class="input-group-addon">
                                                        <span class="fa fa-clock"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="txtDenNgayNVB" class="col-lg-2 col-form-label">Đến ngày</label>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                <div class="input-group date datepicker">
                                                    @Html.TextBoxFor(model => model.DenNgayNVB, new { @class = "form-control keyenter", @id = "txtDenNgayNVB" })
                                                    <span class="input-group-addon">
                                                        <span class="fa fa-clock"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="fwb mb-0 pl-3">Số đến</p>
                                    <div class="col-12 col-lg-12 row">
                                        <label for="TuSo" class="col-lg-1 col-form-label">Từ số</label>
                                        <div class="col-lg-2">
                                            @Html.TextBoxFor(model => model.TuSo, new { @class = "form-control keyenter", @id = "TuSo", @Type = "number" })
                                        </div>
                                        <label for="DenSo" class="col-lg-1 col-form-label">Đến số</label>
                                        <div class="col-lg-2">
                                            @Html.TextBoxFor(model => model.DenSo, new { @class = "form-control keyenter", @id = "DenSo", @Type = "number" })
                                        </div>
                                        <label for="LoaiVanBanID" class="col-lg-2 col-form-label">Loại văn bản</label>
                                        <div class="col-lg-4">
                                            @Html.DropDownListFor(model => model.LoaiVanBanID, new SelectList(Model.lstLoaiVanBan, "ID", "TenLoaiVanBan"), new { @class = "mdb-select md-form md-outline colorful-select dropdown-primary m-0 p-0", @id = "LoaiVanBanID", @searchable = "Nhập từ khóa.." })
                                        </div>
                                    </div>
                                    <div class="w-100"></div>
                                    <div class="col text-center text-lg-right mt-3">
                                        <button id="btnSearch" class="btn text-white f-bg1" type="button">Tìm kiếm</button>
                                    </div>
                                </div>
                                
                            </div>
                            

                            <div class="row">
                                <div class="col-md-12">
                                    <a href="javascript://" onclick="InBrowserVanBanDen()" class="btn-floating btn-sm btn-info mx-1" data-toggle="tooltip" title="In Browser" data-original-title="In Browser"><i class="fal fa-print"></i></a>
                                    <a href="/VanBanDen/ExportWord" class="btn-floating btn-sm btn-primary mx-1" data-toggle="tooltip" data-original-title="Xuất Word" title="Xuất Word"><i class="fal fa-file-word"></i></a>
                                    <a href="/VanBanDen/ExportExcel" class="btn-floating btn-sm btn-success mx-1" data-toggle="tooltip" title="Xuất Excel" data-original-title="Xuất Excel"><i class="fal fa-file-excel"></i>
                                    </a>
                                    @*<a href="/VanBanDen/ExportPdf" class="btn-floating btn-sm btn-warning mx-1" data-toggle="tooltip" title="Xuất PDF" data-original-title="Xuất PDF"><i class="fal fa-file-pdf"></i></a>*@
                                    <a href="javascript://" onclick="XuatPDF();" class="btn-floating btn-sm btn-warning mx-1" data-toggle="tooltip" data-original-title="Xuất PDF" title="Xuất PDF"><i class="fal fa-file-pdf"></i></a>
                                </div>
                            </div>
                            <div class="w-100"></div>

                            <div class="row" id="table-print">
                                <div class="col-12">
                                    <div class="table-responsive-sm">
                                        <table class="table table-hover table-bordered table_pdf" cellspacing="0" width="100%">
                                            <thead class="grey lighten-3 dn-browser">
                                                <tr>
                                                    <th class="th-sm" colspan="12" style="padding:10px 0">SỔ ĐĂNG KÝ VĂN BẢN ĐẾN</th>
                                                </tr>
                                            </thead>
                                            <thead class="bg-primary text-white lighten-3">
                                                <tr>
                                                    @*<th class="t_action th-sm">STT</th>*@
                                                    <th class="th-sm">Ngày đến</th>
                                                    @if (SessionInfo.CurrentUser.TypeUser.Equals("vtdv"))
                                                    {
                                                        <th class="th-sm pointer" data-colname="SoDenVanBanTaiCuc" data-orderby="asc">Số đến CĐK <span><i class="fas fa-sort"></i></span></th>
                                                        <th class="th-sm pointer" data-colname="SoDenVanBan" data-orderby="asc">Số đến ĐV <span><i class="fas fa-sort"></i></span></th>
                                                    }
                                                    else
                                                    {
                                                        <th class="th-sm pointer" data-colname="SoDenCuc" data-orderby="asc">Số đến <span><i class="fas fa-sort"></i></span></th>
                                                    }
                                                    <th class="th-sm col-tacgia">Tác giả</th>
                                                    <th class="th-sm" data-colname="SoKyHieu" data-orderby="asc">Số ký hiệu<span><i class="fas fa-sort"></i></span></th>
                                                    <th class="th-sm">Ngày, tháng</th>
                                                    <th class="th-sm col-trichyeu">Tên loại và trích yếu nội dung</th>
                                                    <th class="th-sm col-dvnhan">Đơn vị/ người nhận</th>
                                                    <th class="th-sm">Ký nhận</th>
                                                    <th class="th-sm">Ghi chú</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tbKetQua">
                                                @{ Html.RenderAction("InSoVanBanListData", Model); }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<form action="/VanBanDen/ExportPDF" method="post" id="ExportPDF" style="display: none">
    <input type="hidden" name="tenFilePDF" id="tenFilePDF" value="ExportPDF" />
    <input type="hidden" name="widthTable" id="widthTable" value="" />
    <textarea name="GridHtml" id="GridHtml"></textarea>
    <input type="submit" />
</form>
<style>
    .select2 {
        padding-top: 5px !important;
    }
</style>
<style>

</style>
<link href="~/Assets/css/print.css" rel="stylesheet" />
@section Script {
    <script src="~/Assets/js/print.js"></script>
    <script>
        setInterval(function () { $(".pagination-ys").show(); }, 1000);
        $(document).ready(function () {
            InitClickCheckAllInTable("chkall", function (res) {
                $("#hdfID").val(res);
            });
            $('.select2').select2();
            //loadPaging();
        });
        function XuatPDF() {
            var widthtable = 1024;
            if (widthtable < 800) widthtable = 1024;
            $('#widthTable').val(parseInt(widthtable));
            $('#tenFilePDF').val("So_Dang_Ky_Van_Ban_Den");
            $(".pagination-ys").hide();
            var style = '<style>.table_pdf th,.table_pdf td { border: none !important;border-left: 1px solid #000 !important;border-top: 1px solid #000 !important;padding: 5px;}.table_pdf tr:nth-child(2) th {font-weight: normal;}.table_pdf {border-bottom: 1px solid #000;border-right: 1px solid #000;border-spacing: 0;}            table th,table td{ vertical-align: middle; }table thead tr{ background: #f1f1f1 !important; }.table_pdf>tbody>tr>td, .table_pdf>tbody>tr>th, .table_pdf>tfoot>tr>td, .table_pdf>tfoot>tr>th, .table_pdf>thead>tr>td, .table_pdf>thead>tr>th {border: 1px solid #ddd;}.text-center,.tac{text-align:center !important}</style>';
            var GridHtml = $("#table-print").html() + style;
            $("#GridHtml").val(GridHtml);
            $("#ExportPDF").submit();
            return false;
        }
        function onChangeStatus(id) {
            swal({
                title: "Thay đổi trạng thái?",
                text: "Trạng thái sẽ được thay đổi, hãy nhấn OK!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '/VanBanDen/onChangeStatus',
                        data: { id: id },
                        dataType: "html",
                        success: function (res) {
                            res = JSON.parse(res);
                            if (res.isSuccess)
                                swal("Thay đổi trạng thái thành công!", {
                                    icon: "success",
                                });
                            else
                                swal("Có lỗi xảy ra", {
                                    icon: "error",
                                });
                            loadData("", "");
                        },
                        error: function (response) {
                            swal("Đã có lỗi xảy ra", { icon: "error", });
                        }
                    });

                }
            });
        }
        function loadfrmView(id) {
            modal.Render("/VanBanDen/Detail/" + id, "Thông tin văn bản đến", "modal-lg");
        }
        function onDelete(id) {
            swal({
                title: "Xóa?",
                text: "Bạn có chắc chăn muốn xóa văn bản đến này?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
              .then((willDelete) => {
                  if (willDelete) {
                      $.ajax({
                          type: "POST",
                          url: '/VanBanDen/Delete',
                          data: { id: id },
                          dataType: "html",
                          success: function (res) {
                              res = JSON.parse(res);
                              if (res.isSuccess == 1)
                                  swal("Xóa văn bản đến thành công!", {
                                      icon: "success",
                                  });
                              else
                                  swal("Đã có lỗi xảy ra", { icon: "error", });
                              loadData("", "");
                          },
                          error: function (response) {
                              swal("Đã có lỗi xảy ra", { icon: "error", });
                          }
                      });

                  }
              });
        }
        function onDeleteMul() {
            if ($("table tbody").find("input[type=checkbox]:checked").length == 0) {
                swal("Bạn cần chọn ít nhất 1 danh mục cần xóa", { icon: "error", });
            } else {
                swal({
                    title: "Xóa?",
                    text: "Bạn có chắc chăn muốn xóa những văn bản đến này?",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
             .then((willDelete) => {
                 if (willDelete) {
                     $.ajax({
                         type: "POST",
                         url: '/VanBanDen/DeleteMul',
                         data: { lstid: $("#hdfID").val() },
                         dataType: "html",
                         success: function (res) {
                             res = JSON.parse(res);
                             if (res.isSuccess)
                                 swal("Xóa thành công!", {
                                     icon: "success",
                                 });
                             else
                                 swal("Có lỗi xảy ra", {
                                     icon: "error",
                                 });
                             loadData("", "");
                         },
                         error: function (response) {
                             swal("Đã có lỗi xảy ra", { icon: "error", });
                         }
                     });

                 }
             });
            }
        }
        $(".keyenter").on("keypress", function (e) {
            if (e.which == 13) {
                $("#btnSearch").click();
            }
        });
        function setDeleteId(id) {
            $("#delModalId").val(id);
        };

        //Thêm event xử lý load ajax
        $("#btnSearch").click(function () {
            loadData("", "");
        });

        $("table th").click(function () {
            var col = $(this).data("colname");
            var orderby = $(this).data("orderby");
            if (col != "" && orderby != null) {
                loadData(col, orderby);
                if (orderby == "desc") orderby = "asc";
                else orderby = "desc";
                $(this).data("orderby", orderby);
            }
        });

        function loadData(col, order, pnum, psize) {
            $("#loading").show();
            $.ajax({
                type: "GET",
                url: '@Url.Action("InSoVanBanListData", "VanBanDen")',
                data: { TuKhoa: $("#txtTuKhoa").val(), PhamViTimKiem: $("#ddlPhamViTimKiem").val().toString(), SoVanBanDenID: $("#SoVanBanDenID").val(), NamVaoSo: $("#NamVaoSo").val(), DonViNhanID: $("#DonViNhanID").val(), TuSo: $("#TuSo").val(), DenSo: $("#DenSo").val(), LoaiVanBanID: $("#LoaiVanBanID").val(), CoQuanBanHanhID: $("#CoQuanBanHanhID").val(), TuNgayND: $("#txtTuNgayND").val(), DenNgayND: $("#txtDenNgayND").val(), TuNgayNVB: $("#txtTuNgayNVB").val(), DenNgayNVB: $("#txtDenNgayNVB").val(), ColumnName: col, OrderBy: order, PageNumber: pnum, PageSize: $("#changePageSize").val(), tab: $("#tab").val() },
                dataType: "html",
                success: function (response) {
                    $("#tbKetQua").html(response);
                    loadPaging();
                    $("#loading").hide();
                },
                error: function (response) {
                    swal("Đã có lỗi xảy ra", { icon: "error", });
                    $("#loading").hide();
                }
            });
        }
        function loadPaging() {
            var total = Math.ceil($("#txtTotal").val() / $("#changePageSize").val());
            var pnum = $("#txtPageNumber").val();
            $(".PagedList-pageCountAndLocation").removeClass("disabled");
            $(".PagedList-pageCountAndLocation").html("<a style=\"padding: 5px\"> Trang <input type=\"text\" id=\"pageNumber\" name=\"PageNunber\" value=\"" + pnum + "\" min=\"0\" style=\"width: 40px;\" onchange=\"onChangePageNunber($(this).val()," + total + ")\"> / " + total + "</a>");
        }

        //Nhảy trang
        function onChangePageNunber(pagenumber, totalpagesize) {

            var reg = /^[0-9]+$/;
            if (pagenumber.match(reg)) {
                if (pagenumber <= 0) {
                    swal("Giá trị của trang phải lớn hơn 0!", { icon: "error", });
                }
                else if (pagenumber > totalpagesize) {
                    swal("Bạn đã nhập quá số trang hiện có!", { icon: "error", });
                }
                else {
                    loadData("", "", pagenumber);
                }
            } else {
                swal("Bạn đã nhập sai định dạng số", { icon: "error", });
            }

        }
    </script>
}