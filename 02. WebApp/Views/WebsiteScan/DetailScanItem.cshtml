@using PagedList.Mvc;
@model TKM.BLL.ScannedItemListView
@{
    var pagesize = Model.PageSize;
    var totalPageNumber = Model.TotalItem / pagesize;
    if (Model.TotalItem % pagesize != 0)
    {
        totalPageNumber = totalPageNumber + 1;
    }
}
<input type="hidden" id="txtTotalScanItem" value="@Model.TotalItem" />
<input type="hidden" id="txtPageNumberScanItem" value="@Model.PageNumber" />
@if (Model != null && Model.lstScannedItem != null && Model.lstScannedItem.Count() > 0)
{
    var index = Model.PageSize.Value * (Model.PageNumber.Value - 1);
    foreach (var item in Model.lstScannedItem)
    {
        index++;
        <tr>
            <td>@index</td>
            <td class="tal text-break">
                @item.FullPath
            </td>
            <td class="tal text-center" style="text-align: center !important;">
                @Html.Raw(item.Status? "<a class='btn btn-outline-success m-1 btn-rounded text-right p-1 pr-3 pl-3 text-center waves-effect waves-light font-weight-bold' style='width: 120px;'>An toàn</a>" : "<a class='btn btn-outline-danger m-1 btn-rounded text-right p-1 pr-3 pl-3 text-center waves-effect waves-light font-weight-bold' style='width: 120px;'>Nguy cơ</a>")
            </td>
        </tr>
    }
}
@if (Model != null && Model.lstScannedItem == null || Model.lstScannedItem.Count == 0)
{
    <tr>
        <td colspan="11" class="text-center c-red-500"><b>Dữ liệu không tồn tại</b></td>
    </tr>
}
else
{
    <tr class="pagination-ys" align="left">
        <td colspan="13">
            <div class="row col-md-12 p-0 m-0">
                <div class="col-md-6">
                    @Html.PagedListPager((PagedList.IPagedList<int>)ViewBag.PagedList, pnum => Url.Action("DetailScanItem", "WebsiteScan", new
               {
                   WebsiteScanId = Model.WebsiteScanID,
                   TuKhoa = Model.TuKhoa,
                   ColumnName = Model.ColumnName,
                   OrderBy = Model.OrderBy,
                   PageNumber = pnum,
                   PageSize = Model.PageSize
               }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.MinimalWithPageCountText, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "tbKetQuaScanItem", OnComplete = "loadPagingScanItem();" }))
                </div>
                <div class="col-md-6 text-right pt-2">
                    @Html.DropDownListFor(m => m.PageSize, new List<SelectListItem>() {
                        new SelectListItem() { Value = "5", Text = "5", Selected=true},
                        new SelectListItem() { Value = "10", Text = "10"},
                         new SelectListItem() { Value = "20", Text = "20"},
                         new SelectListItem() { Value = "50", Text = "50"},
                         new SelectListItem() { Value = "100", Text = "100"}
                     }, new { @id = "changePageSizeScanItem", @class = "custext w-60", @onchange = "loadDataScanItem('', '');" }) kết quả / @Model.TotalItem bản ghi
                </div>
            </div>
        </td>
    </tr>
}
